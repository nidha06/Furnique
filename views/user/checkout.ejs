<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/cart.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .coupon-card:hover {
    border-color: #570B4F !important;
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(87, 11, 79, 0.1);
    transition: all 0.3s ease;
}

.apply-coupon-btn:hover {
    background-color: #6a1b5f !important;
}

@media (max-width: 768px) {
    #couponsContainer {
        grid-template-columns: 1fr;
    }
}
        .checkout-container {
            max-width: 800px;
            margin: 50px auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px  #570B4F;
        }
        .section {
            margin-bottom: 20px;
        }
        .section h3 {
            margin-bottom: 15px;
        }
        .address-container, .payment-container, .order-summary {
            padding: 15px;
            background: #ffffff;
            border-radius: 5px;
            border: 1px solid #ddd;
        }
        .checkout-btn {
            width: 100%;
            padding: 10px;
            background: #0b5a1d;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .checkout-btn:hover {
            background: #218838;
        }
    </style>
    
        <!-- Other head content -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
</head>
<body>
    <div class="checkout-container">
        <h2  style="color: #570B4F;" >Checkout</h2>
        
        <!-- Address Section -->
        <div class="card">
            <div style="background-color: #570B4F;" class="card-header">
                <h5 style="color: #ffffff;">Select Shipping Address</h5>
            </div>
            <div class="card-body">
                <% if (addresses.length > 0) { %>
                    <% addresses.forEach(address => { %>
                        <div class="form-check">
                            <input type="radio" name="selectedAddress" id="address-<%= address._id %>" class="form-check-input" value="<%= address._id %>">
                            <label for="address-<%= address._id %>" class="form-check-label">
                                <strong style="color: #570B4F;"><%= address.addressType %></strong><br>
                                <%= address.name %>, <%= address.city %>, <%= address.landMark %>, <%= address.state %>, <%= address.pincode %><br>
                                <small>Phone: <%= address.phone %></small>
                            </label>
                           
                        </div>
                        <a href="/checkout-editAddress?id=<%=address._id %>" class="btn-small"> <button style="background-color: #570B4F; color: #ffffff;">Edit Address</button></a>
                       
                    <% }) %>
                <% } else { %>
                    <p>No saved addresses. </p>
                <% } %>
            </div>
            <a href="/checkout-addAddress"><button style="background-color: #570B4F;" class="checkout-btn" >Add Address</button></a>
        </div>

        <!-- Payment Method Section -->
        <div class="section">
            <h3 style="color: #570B4F;">Payment Method</h3>
            <div class="payment-container">
              <label style="color: #570B4F;">
                <input type="radio" name="payment" value="credit"> Credit/Debit Card
              </label><br>
              <label style="color: #570B4F;">
                <input type="radio" name="payment" value="paypal"> PayPal
              </label><br>
              <% cart.items.forEach(item => { %>
                <div>
                  <!-- Access the product's salePrice -->
                  <% if (cart.items.reduce((total, item) => total + item.product.salePrice * item.quantity, 0) > 10000) { %>
                    <label style="color: #570B4F;">
                      <input type="hidden" > <strike>   Cash on Delivery</strike><i style="color: red;">   (COD not available for this order)</i>
                    </label><br>
                  <% } else { %>
                    <label style="color: #570B4F;">
                      <input type="radio" name="payment" value="cod"> Cash on Delivery
                    </label><br>
                  <% } %>
                </div>
              <% }); %>
              <label style="color: #570B4F;">
                <input type="radio" name="payment" value="razorpay"> Pay Online (Razorpay)
              </label>
            </div>
          </div>
          <!-- Available Coupons Section -->
<!-- Available Coupons Section -->
<div class="section">
  <h3 style="color: #570B4F;">Apply Coupon</h3>
  <div class="coupon-container" style="padding: 15px; background: #ffffff; border-radius: 5px; border: 1px solid #ddd;">
      <div class="input-group" style="display: flex; gap: 10px;">
          <input type="text" id="couponCode" class="form-control" placeholder="Enter coupon code">
          <button onclick="applyCoupon()" id="applyCouponBtn" style="background-color: #570B4F; color: #ffffff; border: none; padding: 8px 15px; border-radius: 5px;">Apply</button>
          <button onclick="removeCoupon()" id="removeCouponBtn" style="display: none; background-color: #dc3545; color: #ffffff; border: none; padding: 8px 15px; border-radius: 5px;">Remove</button>
      </div>
      <div id="couponMessage" style="margin-top: 10px; font-size: 14px;"></div>
  </div>

  <!-- Available Coupons Display -->
  <div class="available-coupons" style="margin-top: 20px;">
      <div class="coupons-header" style="display: flex; align-items: center; gap: 8px; margin-bottom: 15px;">
          <i class="fas fa-gift" style="color: #570B4F;"></i>
          <h4 style="color: #570B4F; margin: 0;">Available Coupons</h4>
      </div>
      
      <div id="couponsContainer" class="coupons-grid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px;">
        <% if (coupons && coupons.length > 0) { %>
            <% coupons.slice(0, 3).forEach(function(coupon, index) { %>
                <div class="coupon-card" style="border: 2px solid #f3e5f5; border-radius: 8px; padding: 15px; background: white; height: 200px; display: flex; flex-direction: column; justify-content: space-between;">
                    <div>
                        <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 12px;">
                            <i class="fas fa-tag" style="color: #570B4F; font-size: 1.2em;"></i>
                            <span style="font-family: monospace; font-weight: bold; color: #570B4F; font-size: 1.1em;"><%= coupon.code %></span>
                        </div>
                        
                        <div style="color: #666; margin-bottom: 12px; font-size: 1.2em; font-weight: bold;">
                            <i class="<%= coupon.discountType === 'percentage' ? 'fas fa-percent' : 'fas fa-dollar-sign' %>" style="margin-right: 5px;"></i>
                            <span>
                                <%= coupon.discountType === 'percentage' ? 
                                    `${coupon.discountAmount}% off` : 
                                    `₹${coupon.discountAmount} off` %>
                            </span>
                        </div>
    
                        <% if (coupon.minPurchase > 0) { %>
                            <div style="font-size: 0.9em; color: #666; margin-bottom: 8px;">
                                Min. purchase: ₹<%= coupon.minPurchase %>
                            </div>
                        <% } %>
    
                        <div style="font-size: 0.9em; color: #666; display: flex; align-items: center; gap: 5px;">
                            <i class="far fa-clock"></i>
                            <span>Expires: <%= new Date(coupon.expiryDate).toLocaleDateString() %></span>
                        </div>
                    </div>
                    
                    <button 
                        onclick="autofillCoupon('<%= coupon.code %>')"
                        class="apply-coupon-btn"
                        style="background-color: #570B4F; color: white; border: none; padding: 10px; border-radius: 5px; cursor: pointer; width: 100%; margin-top: 10px; transition: background-color 0.3s ease;"
                    >
                        Apply Coupon
                    </button>
                </div>
            <% }); %>
    
            <% if (coupons.length > 3) { %>
                <div id="hiddenCoupons" style="display: none;">
                    <% coupons.slice(3).forEach(function(coupon) { %>
                        <div class="coupon-card" style="border: 2px solid #f3e5f5; border-radius: 8px; padding: 15px; background: white; height: 200px; display: flex; flex-direction: column; justify-content: space-between;">
                            <div>
                                <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 12px;">
                                    <i class="fas fa-tag" style="color: #570B4F; font-size: 1.2em;"></i>
                                    <span style="font-family: monospace; font-weight: bold; color: #570B4F; font-size: 1.1em;"><%= coupon.code %></span>
                                </div>
                                
                                <div style="color: #666; margin-bottom: 12px; font-size: 1.2em; font-weight: bold;">
                                    <i class="<%= coupon.discountType === 'percentage' ? 'fas fa-percent' : 'fas fa-dollar-sign' %>" style="margin-right: 5px;"></i>
                                    <span>
                                        <%= coupon.discountType === 'percentage' ? 
                                            `${coupon.discountAmount}% off` : 
                                            `₹${coupon.discountAmount} off` %>
                                    </span>
                                </div>
    
                                <% if (coupon.minPurchase > 0) { %>
                                    <div style="font-size: 0.9em; color: #666; margin-bottom: 8px;">
                                        Min. purchase: ₹<%= coupon.minPurchase %>
                                    </div>
                                <% } %>
    
                                <div style="font-size: 0.9em; color: #666; display: flex; align-items: center; gap: 5px;">
                                    <i class="far fa-clock"></i>
                                    <span>Expires: <%= new Date(coupon.expiryDate).toLocaleDateString() %></span>
                                </div>
                            </div>
                            
                            <button 
                                onclick="autofillCoupon('<%= coupon.code %>')"
                                class="apply-coupon-btn"
                                style="background-color: #570B4F; color: white; border: none; padding: 10px; border-radius: 5px; cursor: pointer; width: 100%; margin-top: 10px; transition: background-color 0.3s ease;"
                            >
                                Apply Coupon
                            </button>
                        </div>
                    <% }); %>
                </div>
                <button 
                    id="toggleCouponsBtn"
                    onclick="toggleCoupons()"
                    style="width: 100%; padding: 10px; background: transparent; color: #570B4F; border: 2px solid #570B4F; border-radius: 5px; cursor: pointer; margin-top: 10px; grid-column: 1 / -1;"
                >
                    Show More Coupons (<%= coupons.length - 3 %> more)
                </button>
            <% } %>
        <% } else { %>
            <div style="text-align: center; color: #666; padding: 20px;">
                No active coupons available
            </div>
        <% } %>
    </div>

        <!-- Order Summary Section -->
        <div class="section">
          <h3 style="color: #570B4F;">Order Summary</h3>
          <div class="order-summary">
              <% if (cart.items.length > 0) { %>
                  <% cart.items.forEach(product => { %>
                      <div class="order-item">
                          <div class="cart-item">
                              <img src="/uploads/<%=product.product.images[0]%>">
                              <div class="cart-details">
                                  <p style="color: #570B4F;"><strong><%= product.product.productName %></strong></p>
                                  <p style="color: #570B4F;">Price: ₹<%= product.product.salePrice %> × Quantity: <%= product.quantity %></p>
                              </div>
                          </div>
                      </div>
                  <% }) %>
                  <hr>
                  <% if(cart.items.reduce((total, item) => total + item.product.salePrice * item.quantity, 0) < 10000){ %>
                  <div id="priceDetails">
                     
                      <p style="color: #570B4F;">Delivery Charge: ₹<span >149</span></p>
                      <p style="color: #570B4F;">Subtotal: ₹<span id="subtotal"><%= cart.items.reduce((total, item) => total + item.product.salePrice * item.quantity + 149, 0).toFixed(2) %></span></p>
                      <p style="color: green;">Coupon Applied: ₹<span id="discount">0.00</span></p>
                      
                      <h4 style="color: #570B4F;">Total: ₹<span id="cartTotal"><%= cart.items.reduce((total, item) => total + item.product.salePrice * item.quantity + 149, 0).toFixed(2)%></span></h4>
                  </div>
                  <% }else{ %>
                  <div id="priceDetails">
                   
                    <p style="color: #570B4F;">Delivery Charge:  <span style="color: green;" >Free Delivery</span></p>
                    <p style="color: #570B4F;">Subtotal: ₹<span id="subtotal"><%= cart.items.reduce((total, item) => total + item.product.salePrice * item.quantity, 0).toFixed(2) %></span></p>
                    <p style="color: #570B4F;">Coupon Applied: ₹<span style="color: green;" id="discount">0.00</span></p>
                   
                    <h4 style="color: #570B4F;">Total: ₹<span id="cartTotal"><%= cart.items.reduce((total, item) => total + item.product.salePrice * item.quantity , 0).toFixed(2)%></span></h4>
                </div>
                <% } %>
              <% } else { %>
                  <p>Your cart is empty.</p>
              <% } %>
          </div>
      </div>

        <button class="checkout-btn" onclick="placeOrder()">Place Order</button>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
       
        

       function placeOrder() {
  const checkoutBtn = document.querySelector('.checkout-btn');
  checkoutBtn.disabled = true;
  checkoutBtn.textContent = 'Placing Order...';

  let selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
  let paymentMethod = document.querySelector('input[name="payment"]:checked');
  
  // Get the coupon information if applied
  const couponInfo = window.appliedCoupon || null;

  if (!selectedAddress) {
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: 'Please select a shipping address.',
    });
    checkoutBtn.disabled = false;
    checkoutBtn.textContent = 'Place Order';
    return;
  }

  if (!paymentMethod) {
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: 'Please select a payment method.',
    });
    checkoutBtn.disabled = false;
    checkoutBtn.textContent = 'Place Order';
    return;
  }

  // Create order data object
  const orderData = {
    selectedAddressId: selectedAddress.value,
    paymentMethod: paymentMethod.value,
    coupon: couponInfo,
    total: parseFloat(document.getElementById('cartTotal').innerText)
  };

  if (paymentMethod.value === 'razorpay') {
    // Handle Razorpay payment
    fetch('/create-razorpay-order', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(orderData),
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const options = {
            key: '<%=razorpayId%>', // Replace with your Razorpay Key ID
            amount: data.order.amount,
            currency: data.order.currency,
            name: 'Furni - Modern Furniture Store',
            description: 'Order Payment',
            image: '/images/favicon.png', // Replace with your logo URL
            order_id: data.order.id,
            handler: async function (response) {
              // Add coupon information to payment verification
              fetch('/verify-payment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  razorpay_order_id: response.razorpay_order_id,
                  razorpay_payment_id: response.razorpay_payment_id,
                  razorpay_signature: response.razorpay_signature,
                  selectedAddressId: selectedAddress.value,
                  paymentMethod: paymentMethod.value,
                  coupon: couponInfo
                }),
              })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    Swal.fire({
                      icon: 'success',
                      title: 'Order Placed!',
                      text: `Your order has been placed successfully. Order ID: ${data.orderId}`,
                    }).then(() => {
                      window.location.href = '/';
                    });
                  } else {
                    Swal.fire({
                      icon: 'error',
                      title: 'Error',
                      text: data.message,
                    });
                  }
                })
                .catch(error => {
                  console.error('Error verifying payment:', error);
                  Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An unexpected error occurred while verifying your payment.',
                  });
                });
            },
            theme: {
              color: '#570B4F',
            },
          };

          const rzp = new Razorpay(options);
          rzp.open();
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to create payment order.',
          });
        }
      })
      .catch(error => {
        console.error('Error creating Razorpay order:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An unexpected error occurred while creating your payment order.',
        });
      })
      .finally(() => {
        checkoutBtn.disabled = false;
        checkoutBtn.textContent = 'Place Order';
      });
  } else {
    // Handle COD or other payment methods
    fetch('/order-success', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(orderData),
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Order Placed!',
            text: `Your order has been placed successfully. Order ID: ${data.orderId}`,
          }).then(() => {
            window.location.href = '/';
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
          });
        }
      })
      .catch(error => {
        console.error('Error placing order:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An unexpected error occurred while placing your order.',
        });
      })
      .finally(() => {
        checkoutBtn.disabled = false;
        checkoutBtn.textContent = 'Place Order';
      });
  }
}

function editAddress() {
            alert("Redirecting to edit address page...");
            window.location.href = '/edit-address';
        }

        // Add these functions to your existing script section
function toggleCoupons() {
    const hiddenCoupons = document.getElementById('hiddenCoupons');
    const toggleButton = document.getElementById('toggleCouponsBtn');
    const isHidden = hiddenCoupons.style.display === 'none';
    
    hiddenCoupons.style.display = isHidden ? 'block' : 'none';
    toggleButton.textContent = isHidden ? 'Show Less' : `Show More Coupons (${document.querySelectorAll('#hiddenCoupons .coupon-card').length} more)`;
}

function autofillCoupon(code) {
    document.getElementById('couponCode').value = code;
    applyCoupon();
}

function removeCoupon() {
    const couponCode = document.getElementById('couponCode');
    const couponMessage = document.getElementById('couponMessage');
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
    const subtotal = parseFloat(document.getElementById('subtotal').innerText);
    
    // Reset all values
    couponCode.value = '';
    document.getElementById('discount').innerText = '0.00';
    document.getElementById('cartTotal').innerText = subtotal.toFixed(2);
    couponMessage.innerText = '';
    
    // Reset button states
    applyCouponBtn.style.display = 'block';
    removeCouponBtn.style.display = 'none';
    
    // Reset the global coupon variable
    window.appliedCoupon = null;
}

function applyCoupon() {
    const couponCode = document.getElementById('couponCode').value.trim();
    const subtotal = parseFloat(document.getElementById('subtotal').innerText);
    const couponMessage = document.getElementById('couponMessage');
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
    
    if (!couponCode) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please enter a coupon code',
        });
        return;
    }

    fetch('/apply-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            couponCode: couponCode,
            subtotal: subtotal,
           // discount:discount,
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const discountAmount = data.discountAmount;
            const finalTotal = subtotal - discountAmount;
            
            document.getElementById('discount').innerText = discountAmount.toFixed(2);
            document.getElementById('cartTotal').innerText = finalTotal.toFixed(2);
            
            couponMessage.style.color = 'green';
            couponMessage.innerText = `Coupon applied successfully! You saved ₹${discountAmount.toFixed(2)}`;
            
            // Show remove button and hide apply button
            applyCouponBtn.style.display = 'none';
            removeCouponBtn.style.display = 'block';
            
            window.appliedCoupon = {
                code: couponCode,
            };
        } else {
            couponMessage.style.color = 'red';
            couponMessage.innerText = data.message;
            
            document.getElementById('discount').innerText = '0.00';
            document.getElementById('cartTotal').innerText = subtotal.toFixed(2);
            window.appliedCoupon = null;
            
            // Reset button states
            applyCouponBtn.style.display = 'block';
            removeCouponBtn.style.display = 'none';
        }
    })
    .catch(error => {
        console.error('Error applying coupon:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred while applying the coupon.',
        });
    });
}

// Add hover effects for coupon cards
document.addEventListener('DOMContentLoaded', function() {
    const couponCards = document.querySelectorAll('.coupon-card');
    
    couponCards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.borderColor = '#570B4F';
            this.style.transform = 'translateY(-2px)';
            this.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            this.style.transition = 'all 0.3s ease';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.borderColor = '#f3e5f5';
            this.style.transform = 'translateY(0)';
            this.style.boxShadow = 'none';
        });
    });
});
    </script>
</body>
</html>