<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Furnique - Edit Offer</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        
        body {
            background-color: #f4f4f4;
            overflow-x: hidden;
        }

        a {
            text-decoration: none;
        }

        /* Navbar - Mobile First */
        .navbar {
            background-color: #570B4F;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }
        
        .navbar-brand {
            color: #fff;
            font-weight: bold;
            font-size: 24px;
        }
        
        .menu-toggle {
            color: white;
            font-size: 24px;
            background: none;
            border: none;
            cursor: pointer;
            display: block;
        }
        
        /* Sidebar - Mobile First */
        .sidebar {
            background-color: #570B4F;
            position: fixed;
            top: 0;
            left: -100%;
            width: 80%;
            max-width: 250px;
            height: 100vh;
            transition: left 0.3s ease;
            z-index: 999;
            overflow-y: auto;
            padding: 60px 0 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }
        
        .sidebar.active {
            left: 0;
        }
        
        .sidebar-close {
            position: absolute;
            top: 15px;
            right: 15px;
            color: white;
            font-size: 24px;
            background: none;
            border: none;
            cursor: pointer;
        }
        
        .sidebar ul {
            list-style-type: none;
            padding: 0;
        }
        
        .sidebar ul li {
            margin-bottom: 5px;
        }
        
        .sidebar ul li a {
            color: #fff;
            font-size: 16px;
            display: block;
            padding: 12px 20px;
            border-radius: 4px;
            transition: all 0.3s ease;
        }
        
        .sidebar ul li a:hover {
            background-color: #d812be;
            transform: translateX(5px);
        }
        
        /* Overlay for mobile when sidebar is open */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 998;
        }
        
        .overlay.active {
            display: block;
        }
        
        /* Content - Mobile First */
        .content {
            padding: 20px;
            width: 100%;
            transition: margin-left 0.3s;
            padding-top: 56px; /* Account for fixed navbar */
            background-color: #eeeded;
        }
        
        /* Form Container */
        .form-container {
            background-color: #ad71a5;
            padding: 30px;
            max-width: 800px;
            margin: 0 auto;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            color: #fff;
        }

        .form-container h2 {
            color: #fff;
            margin-bottom: 30px;
            text-align: center;
            font-size: 24px;
            position: relative;
            padding-bottom: 10px;
        }

        .form-container h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background-color: #570B4F;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            color: #333;
            margin-bottom: 8px;
            font-weight: 600;
            font-size: 14px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus {
            border-color: #570B4F;
            box-shadow: 0 0 0 2px rgba(87, 11, 79, 0.1);
            outline: none;
        }

        .form-group select {
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%23333' viewBox='0 0 16 16'%3E%3Cpath d='M8 11L3 6h10l-5 5z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-color: white;
            cursor: pointer;
        }

        .form-group select[multiple] {
            height: 150px;
            padding: 8px;
            background-image: none;
        }

        .form-group select option {
            padding: 8px;
        }

        .button-group {
            display: flex;
            gap: 15px;
            margin-top: 30px;
        }

        .btn-primary,
        .btn-secondary {
            flex: 1;
            padding: 12px 25px;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
        }

        .btn-primary {
            background-color: #570B4F;
            color: white;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

        .btn-primary:hover {
            background-color: #d812be;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(87, 11, 79, 0.2);
        }

        .btn-secondary:hover {
            background-color: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(108, 117, 125, 0.2);
        }

        /* Error styles */
        .error-message {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .form-group.error input,
        .form-group.error select {
            border-color: #dc3545;
        }

        .form-group.error .error-message {
            display: block;
        }

        .back-button {
            margin-bottom: 20px;
            background-color: #570B4F;
            color: white;
            padding: 10px 15px;
            border-radius: 6px;
            display: inline-block;
            transition: background-color 0.3s ease;
        }

        .back-button:hover {
            background-color: #d812be;
        }

        /* Desktop styles */
        @media (min-width: 992px) {
            .d-flex {
                display: flex;
            }
            
            .menu-toggle,
            .sidebar-close,
            .overlay {
                display: none;
            }
            
            .sidebar {
                position: fixed;
                width: 250px;
                left: 0;
                top: 56px;
                padding-top: 20px;
                height: calc(100vh - 56px);
                box-shadow: none;
            }
            
            .content {
                flex: 1;
                margin-left: 250px;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <a class="navbar-brand" href="#"><i>Furnique</i></a>
        <button class="menu-toggle" id="menuToggle">☰</button>
    </nav>
    <div class="overlay" id="overlay"></div>
    <!-- Sidebar & Content -->
    <div class="d-flex">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <button class="sidebar-close" id="sidebarClose">✕</button>
            <ul>
                <li><a href="/admin/dashboard">Dashboard</a></li>
                <li><a href="/admin/reports-sales">Sales Report</a></li>
                <li><a href="/admin/users">Customers</a></li>
                <li><a href="/admin/category">Category</a></li>
                <li><a href="/admin/addProducts">Add Products</a></li>
                <li><a href="/admin/products">Products</a></li>
                <li><a href="/admin/orders">Order</a></li>
                <li><a href="/admin/coupons">Coupon</a></li>
                <li><a href="/admin/offermanagement" class="active">Offers</a></li>
                <li><a href="/admin/wallets">Wallets</a></li>
                <li><a href="/admin/logout" style="background-color: #ad71a5; color: #fff; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer;">Log Out</a></li>
            </ul>
        </div>

        <!-- Content Area -->
        <div class="content">
            <a href="/admin/offermanagement" class="back-button">Back to Offer List</a>
            <div class="form-container">
                <h2>Edit Offer</h2>
                <form id="offerForm" action="/admin/update-offer/<%= offer._id %>" method="POST" onsubmit="return validateForm(event)">
                    <div class="form-group" id="categorySelection">
                        <label for="category">Select Category</label>
                        <select id="category" name="category" required>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>" <%= offer.category._id.toString() === category._id.toString() ? 'selected' : '' %>>
                                    <%= category.name %>
                                </option>
                            <% }); %>
                        </select>
                        <div id="category-error" class="error-message">Please select a category</div>
                    </div>

                    <div class="form-group">
                        <label for="discount_type">Discount Type</label>
                        <select id="discount_type" name="discount_type" required>
                            <option value="percentage" <%= offer.discount_type === 'percentage' ? 'selected' : '' %>>Percentage</option>
                            <option value="fixed" <%= offer.discount_type === 'fixed' ? 'selected' : '' %>>Fixed Amount</option>
                        </select>
                        <div id="discount_type-error" class="error-message">Please select a discount type</div>
                    </div>

                    <div class="form-group">
                        <label for="discount_value">Discount Value</label>
                        <input type="number" id="discount_value" name="discount_value" value="<%= offer.discount_value %>" min="0" required>
                        <div id="discount_value-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label for="start_date">Start Date</label>
                        <input type="date" id="start_date" name="start_date" value="<%= new Date(offer.start_date).toISOString().split('T')[0] %>" required>
                        <div id="start_date-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label for="end_date">End Date</label>
                        <input type="date" id="end_date" name="end_date" value="<%= new Date(offer.end_date).toISOString().split('T')[0] %>" required>
                        <div id="end_date-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label for="minimum_purchase">Minimum Purchase Amount (₹)</label>
                        <input type="number" id="minimum_purchase" name="minimum_purchase" value="<%= offer.minimum_purchase %>" min="0" required>
                        <div id="minimum_purchase-error" class="error-message"></div>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="btn-primary">Update Offer</button>
                        <a href="/admin/offermanagement" class="btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Toggle sidebar on mobile
        document.getElementById('menuToggle').addEventListener('click', function() {
            document.getElementById('sidebar').classList.add('active');
            document.getElementById('overlay').classList.add('active');
        });
        
        document.getElementById('sidebarClose').addEventListener('click', function() {
            document.getElementById('sidebar').classList.remove('active');
            document.getElementById('overlay').classList.remove('active');
        });
        
        document.getElementById('overlay').addEventListener('click', function() {
            document.getElementById('sidebar').classList.remove('active');
            this.classList.remove('active');
        });
        
        // Handle resize events
        window.addEventListener('resize', function() {
            if (window.innerWidth >= 992) {
                document.getElementById('sidebar').classList.remove('active');
                document.getElementById('overlay').classList.remove('active');
            }
        });

        // Date validation setup
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('start_date').min = today;
        document.getElementById('end_date').min = today;

        document.getElementById('start_date').addEventListener('change', function() {
            const startDate = this.value;
            document.getElementById('end_date').min = startDate;
            clearError('end_date-error');
        });

        // Validation function
        function validateForm(event) {
            event.preventDefault();
            clearAllErrors();
            let isValid = true;

            // Required fields validation
            const requiredFields = [
                { id: 'category', errorId: 'category-error', message: 'Please select a category' },
                { id: 'discount_type', errorId: 'discount_type-error', message: 'Please select a discount type' },
                { id: 'discount_value', errorId: 'discount_value-error', message: 'Please enter a discount value' },
                { id: 'start_date', errorId: 'start_date-error', message: 'Please select a start date' },
                { id: 'end_date', errorId: 'end_date-error', message: 'Please select an end date' },
                { id: 'minimum_purchase', errorId: 'minimum_purchase-error', message: 'Please enter a minimum purchase amount' }
            ];

            requiredFields.forEach(field => {
                const input = document.getElementById(field.id);
                if (!input.value.trim()) {
                    displayError(field.errorId, field.message);
                    isValid = false;
                }
            });

            // Numeric validation
            const discountValue = parseFloat(document.getElementById('discount_value').value);
            if (discountValue < 0) {
                displayError('discount_value-error', 'Discount value cannot be negative');
                isValid = false;
            }
            const discountType = document.getElementById('discount_type').value;
            if (discountType === 'percentage' && (discountValue > 100 || discountValue < 0)) {
                displayError('discount_value-error', 'Percentage discount must be between 0 and 100');
                isValid = false;
            }

            const minimumPurchase = parseFloat(document.getElementById('minimum_purchase').value);
            if (minimumPurchase < 0) {
                displayError('minimum_purchase-error', 'Minimum purchase amount cannot be negative');
                isValid = false;
            }

            // Date validation (no past dates)
            const startDate = new Date(document.getElementById('start_date').value);
            const endDate = new Date(document.getElementById('end_date').value);
            const currentDate = new Date(today);
            if (startDate < currentDate) {
                displayError('start_date-error', 'Start date cannot be in the past');
                isValid = false;
            }
            if (endDate < currentDate) {
                displayError('end_date-error', 'End date cannot be in the past');
                isValid = false;
            }
            if (endDate < startDate) {
                displayError('end_date-error', 'End date cannot be before start date');
                isValid = false;
            }

            if (isValid) {
                submitForm();
            }
            return isValid;
        }

        // Error handling functions
        function displayError(errorId, message) {
            const errorElement = document.getElementById(errorId);
            errorElement.textContent = message;
            errorElement.style.display = 'block';
            document.getElementById(errorId.replace('-error', '')).parentElement.classList.add('error');
        }

        function clearError(errorId) {
            const errorElement = document.getElementById(errorId);
            errorElement.textContent = '';
            errorElement.style.display = 'none';
            document.getElementById(errorId.replace('-error', '')).parentElement.classList.remove('error');
        }

        function clearAllErrors() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.textContent = '';
                element.style.display = 'none';
                const fieldId = element.id.replace('-error', '');
                document.getElementById(fieldId).parentElement.classList.remove('error');
            });
        }

        // Form submission with AJAX
        async function submitForm() {
            const formData = {};
            new FormData(document.getElementById('offerForm')).forEach((value, key) => {
                formData[key] = value;
            });

            try {
                const response = await fetch(`/admin/update-offer/<%= offer._id %>`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                });

                const result = await response.json();

                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: result.message,
                    }).then(() => {
                        window.location.href = '/admin/offermanagement';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: result.message || 'Something went wrong!',
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'An unexpected error occurred!',
                });
            }
        }
    </script>
</body>
</html>