<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Furnique - Create Offer</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        
        body {
            background-color: #f4f4f4;
        }

        a {
            text-decoration: none;
        }

        /* Navbar */
        .navbar {
            background-color: #570B4F;
            padding: 10px 20px;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .navbar-brand {
            color: #fff;
            font-weight: bold;
            font-size: 30px;
        }

        /* Main Layout */
        .d-flex {
            display: flex;
            min-height: 100vh;
            padding-top: 56px; /* Account for fixed navbar */
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background-color: #570B4F;
            position: fixed;
            height: 100%;
            left: 0;
            top: 54px;
            padding: 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }

        .sidebar ul {
            list-style-type: none;
            padding: 0;
        }

        .sidebar ul li {
            margin-bottom: 15px;
        }

        .sidebar ul li a {
            color: #fff;
            font-size: 16px;
            display: block;
            padding: 12px 15px;
            border-radius: 6px;
            transition: all 0.3s ease;
        }

        .sidebar ul li a:hover {
            background-color: #f8a7ed;
            color: #570B4F;
            transform: translateX(5px);
        }

        /* Content Area */
        .content {
            flex: 1;
            margin-left: 250px;
            padding: 40px;
            background-color: #f9f9f9;
        }

        /* Form Container */
        .form-container {
            background-color: #ad71a5;
            padding: 30px;
            max-width: 800px;
            margin: 0 auto;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            color: #fff;
        }

        .form-container h2 {
            color: #fff;
            margin-bottom: 30px;
            text-align: center;
            font-size: 24px;
            position: relative;
            padding-bottom: 10px;
        }

        .form-container h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background-color: #570B4F;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            color: #333;
            margin-bottom: 8px;
            font-weight: 600;
            font-size: 14px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus {
            border-color: #570B4F;
            box-shadow: 0 0 0 2px rgba(87, 11, 79, 0.1);
            outline: none;
        }

        .form-group select {
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%23333' viewBox='0 0 16 16'%3E%3Cpath d='M8 11L3 6h10l-5 5z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-color: white;
            cursor: pointer;
        }

        .form-group select[multiple] {
            height: 150px;
            padding: 8px;
            background-image: none;
        }

        .form-group select option {
            padding: 8px;
        }

        .offer-type-selector {
            display: flex;
            gap: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 6px;
            margin-bottom: 20px;
        }

        .offer-type-selector label {
            display: flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
            color: #333;
            font-weight: 500;
        }

        .button-group {
            display: flex;
            gap: 15px;
            margin-top: 30px;
        }

        .btn-primary,
        .btn-secondary {
            flex: 1;
            padding: 12px 25px;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
        }

        .btn-primary {
            background-color: #570B4F;
            color: white;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

        .btn-primary:hover {
            background-color: #d812be;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(87, 11, 79, 0.2);
        }

        .btn-secondary:hover {
            background-color: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(108, 117, 125, 0.2);
        }

        .hidden {
            display: none;
        }

        /* Error styles */
        .error-message {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .form-group.error input,
        .form-group.error select {
            border-color: #dc3545;
        }

        .form-group.error .error-message {
            display: block;
        }

        .back-to-list {
            display: inline-block;
            margin-top: 20px;
            padding: 10px 15px;
            background-color: #570B4F;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }
        .back-to-list:hover {
            background-color: #d812be;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <%- include('../../views/partials/admin/sidebar') %>
        <!-- Content Area -->
        <div class="content">
            <div class="form-container">
                <h2>Create New Offer</h2>
                <form action="/admin/submit-offer" method="POST">
                    <div class="form-group">
                        <label for="title">Offer Name</label>
                        <input type="text" id="title" name="title" required>
                    </div>

                    <div class="form-group">
                        <label>Offer Applies To</label>
                        <div class="offer-type-selector">
                            <label>
                                <input type="radio" id="categoryBased" name="offerType" value="category" checked>
                                Category Based
                            </label>
                            <label>
                                <input type="radio" id="productBased" name="offerType" value="product">
                                Product Based
                            </label>
                        </div>
                    </div>

                    <div class="form-group" id="categorySelection">
                        <label for="categories">Select Categories</label>
                        <select id="categories" name="categories[]" multiple required>
                            <% for(let i = 0; i < categories.length; i++){ %>
                                <option value="<%= categories[i].name %>"><%= categories[i].name %></option>
                              <% } %>
                        </select>
                        <div class="error-message">Please select at least one category</div>
                    </div>

                    <div class="form-group hidden" id="productSelection">
                        <label for="products">Select Products</label>
                        <select id="products" name="products[]" multiple>
                            <% for(let i = 0; i < products.length; i++){ %>
                                <option value="<%=products[i].productName %>"><%=products[i].productName %></option>
                              <% } %>
                        </select>
                        <div class="error-message">Please select at least one product</div>
                    </div>

                    <div class="form-group">
                        <label for="discount_type">Discount Type</label>
                        <select id="discount_type" name="discount_type" required>
                            <option value="percentage">Percentage</option>
                            <option value="fixed">Fixed Amount</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="discount_value">Discount Value</label>
                        <input type="number" id="discount_value" name="discount_value" min="0" required>
                    </div>

                    <div class="form-group">
                        <label for="start_date">Start Date</label>
                        <input type="date" id="start_date" name="start_date" required>
                    </div>

                    <div class="form-group">
                        <label for="end_date">End Date</label>
                        <input type="date" id="end_date" name="end_date" required>
                    </div>

                    <div class="form-group">
                        <label for="minimum_purchase">Minimum Purchase Amount (₹)</label>
                        <input type="number" id="minimum_purchase" name="minimum_purchase" min="0" required>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="btn-primary">Create Offer</button>
                        <a href="/admin/offermanagement" class="btn-secondary">Cancel</a>
                    </div>
                </form>
                <div style="text-align: center; margin-top: 20px;">
                    <a href="/admin/coupons" class="back-to-list">Back to Coupon List</a>
                </div>
            </div>
        </div>
    </div>
    <script>
        document.getElementById('categoryBased').addEventListener('change', () => {
            document.getElementById('categories').style.display = 'block';
            document.getElementById('products').style.display = 'none';
        });
    
        document.getElementById('productBased').addEventListener('change', () => {
            document.getElementById('products').style.display = 'block';
            document.getElementById('categories').style.display = 'none';
        });
    </script>

    <script>
        // Date validation
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('start_date').min = today;
        document.getElementById('end_date').min = today;

        document.getElementById('start_date').addEventListener('change', function() {
            document.getElementById('end_date').min = this.value;
        });

        // Category/Product selection toggle
        const offerTypeRadios = document.querySelectorAll('input[name="offerType"]');
        const categorySelection = document.getElementById('categorySelection');
        const productSelection = document.getElementById('productSelection');

        offerTypeRadios.forEach(radio => {
            radio.addEventListener('change', function() {
                if (this.value === 'category') {
                    categorySelection.classList.remove('hidden');
                    productSelection.classList.add('hidden');
                    document.getElementById('products').value = '';
                } else {
                    categorySelection.classList.add('hidden');
                    productSelection.classList.remove('hidden');
                    document.getElementById('categories').value = '';
                }
            });
        });

        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            let hasError = false;

            // Date validation
            const startDate = new Date(document.getElementById('start_date').value);
            const endDate = new Date(document.getElementById('end_date').value);
            
            if (endDate < startDate) {
                e.preventDefault();
                alert('End date cannot be before start date');
                hasError = true;
            }

            // Category/Product validation
            const offerType = document.querySelector('input[name="offerType"]:checked').value;
            
            if (offerType === 'category') {
                const categoriesSelected = document.getElementById('categories').selectedOptions.length;
                if (categoriesSelected === 0) {
                    e.preventDefault();
                    categorySelection.classList.add('error');
                    hasError = true;
                } else {
                    categorySelection.classList.remove('error');
                }
            } else {
                const productsSelected = document.getElementById('products').selectedOptions.length;
                if (productsSelected === 0) {
                    e.preventDefault();
                    productSelection.classList.add('error');
                    hasError = true;
                } else {
                    productSelection.classList.remove('error');
                }
            }

            if (hasError) {
                e.preventDefault();
            }
        });
        
    // Handle form submission via AJAX
    document.querySelector('form').addEventListener('submit', async function(e) {
        e.preventDefault(); // Prevent default form submission

        // Perform client-side validation
        let hasError = false;

        // Date validation
        const startDate = new Date(document.getElementById('start_date').value);
        const endDate = new Date(document.getElementById('end_date').value);

        if (endDate < startDate) {
            alert('End date cannot be before start date');
            return;
        }

        // Category/Product validation
        const offerType = document.querySelector('input[name="offerType"]:checked').value;

        if (offerType === 'category') {
            const categoriesSelected = document.getElementById('categories').selectedOptions.length;
            if (categoriesSelected === 0) {
                document.getElementById('categorySelection').classList.add('error');
                hasError = true;
            } else {
                document.getElementById('categorySelection').classList.remove('error');
            }
        } else {
            const productsSelected = document.getElementById('products').selectedOptions.length;
            if (productsSelected === 0) {
                document.getElementById('productSelection').classList.add('error');
                hasError = true;
            } else {
                document.getElementById('productSelection').classList.remove('error');
            }
        }

        if (hasError) {
            return;
        }

        // Collect form data
        const formData = new FormData(this);
        const data = {};
        formData.forEach((value, key) => {
            if (key === 'categories[]' || key === 'products[]') {
                data[key] = formData.getAll(key); // Handle multiple selections
            } else {
                data[key] = value;
            }
        });

        try {
            // Send POST request to the server
            const response = await fetch('/admin/submit-offer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            const result = await response.json();

            if (result.success) {
                // Show success alert using SweetAlert
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: result.message,
                }).then(() => {
                    // Redirect to the offer listing page
                    window.location.href = '/admin/offermanagement';
                });
            } else {
                // Show error alert if creation fails
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: result.message || 'Something went wrong!',
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An unexpected error occurred!',
            });
        }
    });

    </script>
</body>
</html>