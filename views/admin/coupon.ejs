<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Furnique - Coupon Management</title>
    <style>
        /* Previous CSS remains unchanged */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            overflow-x: hidden;
            min-height: 100vh;
        }
        
        a {
            text-decoration: none;
        }
        
        /* Navbar */
        .navbar {
            background-color: #570B4F;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 100;
            width: 100%;
        }
        
        .navbar-brand {
            color: #fff;
            font-weight: bold;
            font-size: 24px;
        }
        
        .menu-toggle {
            color: white;
            font-size: 24px;
            background: none;
            border: none;
            cursor: pointer;
            display: block;
        }
        
        .nav-wrapper {
            display: flex;
            height: calc(100vh - 56px);
        }
        
        /* Sidebar */
        .sidebar {
            background-color: #570B4F;
            position: fixed;
            top: 56px;
            left: -100%;
            width: 85%;
            max-width: 300px;
            height: calc(100vh - 56px);
            transition: left 0.3s ease;
            z-index: 999;
            overflow-y: auto;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.3);
        }
        
        .sidebar.active {
            left: 0;
        }
        
        .sidebar-close {
            position: absolute;
            top: 15px;
            right: 15px;
            color: white;
            font-size: 24px;
            background: none;
            border: none;
            cursor: pointer;
        }
        
        .sidebar ul {
            list-style-type: none;
            padding: 15px 0;
        }
        
        .sidebar ul li {
            margin-bottom: 5px;
        }
        
        .sidebar ul li a {
            color: #fff;
            font-size: 16px;
            display: block;
            padding: 12px 20px;
            border-radius: 4px;
            transition: all 0.3s ease;
        }
        
        .sidebar ul li a:hover {
            background-color: #d812be;
            transform: translateX(5px);
        }
        
        .overlay {
            display: none;
            position: fixed;
            top: 56px;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 998;
        }
        
        .overlay.active {
            display: block;
        }
        
        .main {
            width: 100%;
            padding: 15px;
            margin-top: 0;
        }
        
        .header-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .search-bar {
            width: 100%;
            position: relative;
        }
        
        .search-bar input {
            padding: 12px;
            width: 100%;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }
        
        .search-bar button {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #570B4F;
        }
        
        .create-btn {
            background-color: #570B4F;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease, transform 0.2s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
            width: 100%;
        }
        
        .create-btn:hover {
            background-color: #d812be;
            transform: scale(1.02);
        }
        
        .table-container {
            width: 100%;
            overflow-x: auto;
            margin-top: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        table {
            width: 100%;
            min-width: 800px;
            border-collapse: collapse;
            background-color: white;
        }
        
        th, td {
            padding: 12px 10px;
            border-bottom: 1px solid #ddd;
            text-align: left;
            font-size: 14px;
        }
        
        th {
            background-color: #ad71a5;
            color: #fff;
            font-weight: bold;
            white-space: nowrap;
            position: sticky;
            top: 0;
        }
        
        tr:hover {
            background-color: #f9f9f9;
        }
        
        .action-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            justify-content: flex-start;
        }
        
        .btn-update, .btn-delete {
            padding: 6px 12px;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 4px;
            font-size: 13px;
            display: inline-block;
            white-space: nowrap;
            text-align: center;
            min-width: 70px;
        }
        
        .btn-update {
            background-color: #28a745;
        }
        
        .btn-delete {
            background-color: #dc3545;
        }
        
        .btn-update:hover, .btn-delete:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        
        .status-cell {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        
        .status-text {
            font-weight: 500;
        }
        
        .btn-status {
            padding: 6px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 13px;
            transition: all 0.3s ease;
            color: white;
            width: 100%;
        }
        
        .btn-status.active {
            background-color: #dc3545;
        }
        
        .btn-status.inactive {
            background-color: #28a745;
        }
        
        .btn-status:hover {
            opacity: 0.9;
            transform: scale(1.02);
        }
        
        .pagination-container {
            margin-top: 20px;
            width: 100%;
            overflow-x: auto;
        }
        
        .pagination {
            display: flex;
            list-style-type: none;
            padding: 15px 0;
            justify-content: center;
            flex-wrap: wrap;
            gap: 5px;
        }
        
        .pagination .page-item {
            margin: 0 2px;
        }
        
        .pagination .page-link {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            text-decoration: none;
            color: #570B4F;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            background-color: #fff;
            font-size: 14px;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #570B4F;
            color: white;
            border-color: #570B4F;
        }
        
        .pagination .page-link:hover {
            background-color: #f0f0f0;
        }
        
        .coupon-form-container label {
            display: block;
            margin-bottom: 5px;
            color: #570B4F;
            font-weight: 500;
        }
        
        .coupon-form-container input,
        .coupon-form-container select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }
        
        @media (min-width: 576px) {
            .main {
                padding: 20px;
            }
            .create-btn {
                width: auto;
            }
            .btn-status {
                width: auto;
                max-width: 100px;
            }
        }
        
        @media (min-width: 768px) {
            .header-container {
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
            }
            .search-bar {
                width: auto;
                min-width: 250px;
            }
            .status-cell {
                flex-direction: row;
                align-items: center;
                gap: 10px;
            }
            .status-text {
                min-width: 60px;
            }
            th, td {
                padding: 14px 12px;
            }
        }
        
        @media (min-width: 992px) {
            body {
                display: flex;
                flex-direction: column;
                min-height: 100vh;
            }
            .menu-toggle, 
            .sidebar-close,
            .overlay {
                display: none;
            }
            .nav-wrapper {
                display: flex;
                flex: 1;
            }
            .sidebar {
                position: static;
                width: 250px;
                left: 0;
                top: 0;
                height: auto;
                box-shadow: none;
            }
            .main {
                width: calc(100% - 250px);
                min-height: 100%;
                overflow-y: auto;
                padding: 25px;
            }
            table {
                min-width: auto;
            }
            td, th {
                font-size: 15px;
            }
            .btn-update, .btn-delete, .btn-status {
                font-size: 14px;
            }
        }
        
        @media (min-width: 1200px) {
            .main {
                padding: 30px;
            }
            .pagination .page-link {
                width: 40px;
                height: 40px;
            }
        }
        /* Added error message styling */
        .error-message {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }
        .input-error {
            border-color: #dc3545;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <a class="navbar-brand" href="#"><i>Furnique</i></a>
        <button class="menu-toggle" id="menuToggle">☰</button>
    </nav>
    
    <div class="overlay" id="overlay"></div>
    
    <div class="nav-wrapper">
        <div class="sidebar" id="sidebar">
            <button class="sidebar-close" id="sidebarClose">✕</button>
            <ul>
                <li><a href="/admin/dashboard">Dashboard</a></li>
                <li><a href="/admin/reports-sales">Sales Report</a></li>
                <li><a href="/admin/users">Customers</a></li>
                <li><a href="/admin/category">Category</a></li>
                <li><a href="/admin/addProducts">Add Products</a></li>
                <li><a href="/admin/products">Products</a></li>
                <li><a href="/admin/orders">Order</a></li>
                <li><a href="/admin/coupons">Coupon</a></li>
                <li><a href="/admin/offermanagement">Offers</a></li>
                <li><a href="/admin/wallets">Wallets</a></li>
                <li><a href="/admin/logout" style="background-color: #ad71a5; color: #fff; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer;">Log Out</a></li>
            </ul>
        </div>
            
        <div class="main">
            <div class="header-container">
                <form action="/admin/coupons" method="GET" class="search-bar">
                    <h2 style="color: #570B4F;">Coupon Management</h2>
                </form>
                <a href="/admin/getCreateCoupon" class="create-btn">Create New Coupon</a>
            </div>
                
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Coupon Code</th>
                            <th>Discount Type</th>
                            <th>Discount Value</th>
                            <th>Min Purchase</th>
                            <th>Max Limit</th>
                            <th>Expiry Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% coupons.forEach(coupon => { %>
                        <tr>
                            <td><%= coupon.code %></td>
                            <td><%= coupon.discountType %></td>
                            <td><%= coupon.discountAmount %><%= coupon.discountType === 'percentage' ? '%' : '₹' %></td>
                            <td>₹<%= coupon.minPurchase %></td>
                            <td>₹<%= coupon.maxLimit %></td>
                            <td><%= new Date(coupon.expiryDate).toLocaleDateString('en-IN') %></td>
                            <td>
                                <div class="status-cell" data-id="<%= coupon._id %>">
                                    <span class="status-text"><%= coupon.isActive ? 'Active' : 'Inactive' %></span>
                                    <button 
                                        class="btn-status <%= coupon.isActive ? 'active' : 'inactive' %>" 
                                        data-id="<%= coupon._id %>" 
                                        data-status="<%= coupon.isActive ? 'inactive' : 'active' %>"
                                    >
                                        <%= coupon.isActive ? 'Deactivate' : 'Activate' %>
                                    </button>
                                </div>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="/admin/editCoupon/<%= coupon._id %>" class="btn-update">Edit</a>
                                    <a href="/admin/deleteCoupon/<%= coupon._id %>" class="btn-delete" onclick="return confirm('Are you sure you want to delete this coupon?')">Delete</a>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
                
            <div class="pagination-container">
                <ul class="pagination">
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>&search=<%= search %>"><%= i %></a>
                        </li>
                    <% } %>
                </ul>
            </div>

            <% if (showForm) { %>
            <div class="coupon-form-container">
                <h2 style="color: #570B4F; margin-bottom: 20px;">
                    <%= coupon ? 'Edit Coupon' : 'Create New Coupon' %>
                </h2>
                <form id="couponForm" action="<%= coupon ? '/admin/editCoupon/' + coupon._id : '/admin/createCoupon' %>" method="POST">
                    <div style="margin-bottom: 15px;">
                        <label for="code">Coupon Code *</label>
                        <input type="text" id="code" name="code" value="<%= coupon ? coupon.code : '' %>" 
                               required maxlength="20" 
                               style="width: 100%; padding: 8px; margin-top: 5px;">
                        <span class="error-message" id="codeError"></span>
                    </div>

                    <div style="margin-bottom: 15px;">
                        <label for="discountType">Discount Type *</label>
                        <select id="discountType" name="discountType" required style="width: 100%; padding: 8px; margin-top: 5px;">
                            <option value="percentage" <%= coupon && coupon.discountType === 'percentage' ? 'selected' : '' %>>Percentage</option>
                            <option value="fixed" <%= coupon && coupon.discountType === 'fixed' ? 'selected' : '' %>>Fixed Amount</option>
                        </select>
                    </div>

                    <div style="margin-bottom: 15px;">
                        <label for="discountAmount">Discount Value *</label>
                        <input type="number" id="discountAmount" name="discountAmount" 
                               value="<%= coupon ? coupon.discountAmount : '' %>" required min="1" 
                               step="0.01" style="width: 100%; padding: 8px; margin-top: 5px;">
                        <span class="error-message" id="discountAmountError"></span>
                    </div>

                    <div style="margin-bottom: 15px;">
                        <label for="minPurchase">Minimum Purchase *</label>
                        <input type="number" id="minPurchase" name="minPurchase" 
                               value="<%= coupon ? coupon.minPurchase : '' %>" required min="0" 
                               step="0.01" style="width: 100%; padding: 8px; margin-top: 5px;">
                        <span class="error-message" id="minPurchaseError"></span>
                    </div>

                    <div style="margin-bottom: 15px;">
                        <label for="maxLimit">Maximum Limit *</label>
                        <input type="number" id="maxLimit" name="maxLimit" 
                               value="<%= coupon ? coupon.maxLimit : '' %>" required min="0" 
                               step="0.01" style="width: 100%; padding: 8px; margin-top: 5px;">
                        <span class="error-message" id="maxLimitError"></span>
                    </div>

                    <div style="margin-bottom: 15px;">
                        <label for="expiryDate">Expiry Date *</label>
                        <input type="date" id="expiryDate" name="expiryDate" 
                               value="<%= coupon ? coupon.expiryDate.toISOString().split('T')[0] : '' %>" 
                               required style="width: 100%; padding: 8px; margin-top: 5px;">
                        <span class="error-message" id="expiryDateError"></span>
                    </div>

                    <button type="submit" class="create-btn">Save Coupon</button>
                </form>
            </div>
            <% } %>
        </div>
    </div>

    <script>
       // Enhanced validation for coupon form
document.addEventListener('DOMContentLoaded', function () {
    const statusButtons = document.querySelectorAll('.btn-status');
    statusButtons.forEach(button => {
        button.addEventListener('click', async function () {
            // Status button functionality remains unchanged
            const couponId = this.getAttribute('data-id');
            const newStatus = this.getAttribute('data-status');
            try {
                const response = await fetch(`/admin/update-coupon-status/${couponId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ isActive: newStatus === 'active' }),
                });
                const data = await response.json();
                if (data.success) {
                    this.textContent = newStatus === 'active' ? 'Deactivate' : 'Activate';
                    if (newStatus === 'active') {
                        this.classList.remove('inactive');
                        this.classList.add('active');
                    } else {
                        this.classList.remove('active');
                        this.classList.add('inactive');
                    }
                    this.setAttribute('data-status', newStatus === 'active' ? 'inactive' : 'active');
                    const statusCell = this.parentElement;
                    const statusText = statusCell.querySelector('.status-text');
                    if (statusText) {
                        statusText.textContent = newStatus === 'active' ? 'Active' : 'Inactive';
                    }
                } else {
                    alert('Failed to update status. Please try again.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An unexpected error occurred.');
            }
        });
    });

    const couponForm = document.getElementById('couponForm');
    if (couponForm) {
        // Set minimum date for expiry date input to today
        const expiryDateInput = document.getElementById('expiryDate');
        const today = new Date().toISOString().split('T')[0];
        expiryDateInput.setAttribute('min', today);

        // Add input event listener for real-time validation
        const codeInput = document.getElementById('code');
        codeInput.addEventListener('input', function() {
            validateCode(this);
        });
        
        // Also validate when the field loses focus
        codeInput.addEventListener('blur', function() {
            validateCode(this);
        });

        // Enhanced code validation function
        function validateCode(input) {
            const code = input.value;
            const errorElement = document.getElementById('codeError');
            let error = '';

            if (!code || code.length === 0) {
                error = 'Coupon code cannot be empty';
            } else if (/^\s+$/.test(code)) {
                error = 'Coupon code cannot contain only spaces';
            } else if (!/^[A-Z0-9]{3,20}$/.test(code)) {
                error = 'Must be 3-20 uppercase letters or numbers, no spaces';
            }

            if (error) {
                input.classList.add('input-error');
                errorElement.textContent = error;
                errorElement.style.display = 'block';
                return false;
            } else {
                input.classList.remove('input-error');
                errorElement.style.display = 'none';
                return true;
            }
        }

        // Add input event listener for the date field
        expiryDateInput.addEventListener('input', function() {
            validateExpiryDate(this);
        });
        
        // Also validate date when field loses focus
        expiryDateInput.addEventListener('blur', function() {
            validateExpiryDate(this);
        });

        // Date validation function
        function validateExpiryDate(input) {
            const selectedDate = new Date(input.value);
            const currentDate = new Date();
            currentDate.setHours(0, 0, 0, 0);
            const errorElement = document.getElementById('expiryDateError');
            
            if (selectedDate < currentDate) {
                input.classList.add('input-error');
                errorElement.textContent = 'Expiry date cannot be in the past';
                errorElement.style.display = 'block';
                return false;
            } else {
                input.classList.remove('input-error');
                errorElement.style.display = 'none';
                return true;
            }
        }

        // Enhanced form submission validation
        couponForm.addEventListener('submit', function (e) {
            e.preventDefault();
            let isValid = true;
            
            // Reset all error states
            document.querySelectorAll('.input-error').forEach(input => {
                input.classList.remove('input-error');
            });
            document.querySelectorAll('.error-message').forEach(error => {
                error.style.display = 'none';
            });

            // Validate coupon code
            const code = document.getElementById('code');
            if (!validateCode(code)) {
                isValid = false;
            }

            // Validate expiry date
            const expiryDate = document.getElementById('expiryDate');
            if (!validateExpiryDate(expiryDate)) {
                isValid = false;
            }

            // Validate discount amount
            const discountType = document.getElementById('discountType').value;
            const discountAmount = document.getElementById('discountAmount');
            const discountAmountValue = parseFloat(discountAmount.value);
            const discountError = document.getElementById('discountAmountError');
            if (isNaN(discountAmountValue)) {
                isValid = false;
                discountAmount.classList.add('input-error');
                discountError.textContent = 'Must be a valid number';
                discountError.style.display = 'block';
            } else if (discountType === 'percentage' && (discountAmountValue <= 0 || discountAmountValue > 100)) {
                isValid = false;
                discountAmount.classList.add('input-error');
                discountError.textContent = 'Must be between 1 and 100';
                discountError.style.display = 'block';
            } else if (discountType === 'fixed' && discountAmountValue <= 0) {
                isValid = false;
                discountAmount.classList.add('input-error');
                discountError.textContent = 'Must be greater than 0';
                discountError.style.display = 'block';
            }

            // Validate minimum purchase
            const minPurchase = document.getElementById('minPurchase');
            const minPurchaseValue = parseFloat(minPurchase.value);
            const minPurchaseError = document.getElementById('minPurchaseError');
            if (isNaN(minPurchaseValue) || minPurchaseValue < 0) {
                isValid = false;
                minPurchase.classList.add('input-error');
                minPurchaseError.textContent = 'Must be a non-negative number';
                minPurchaseError.style.display = 'block';
            }

            // Validate maximum limit
            const maxLimit = document.getElementById('maxLimit');
            const maxLimitValue = parseFloat(maxLimit.value);
            const maxLimitError = document.getElementById('maxLimitError');
            if (isNaN(maxLimitValue) || maxLimitValue < 0) {
                isValid = false;
                maxLimit.classList.add('input-error');
                maxLimitError.textContent = 'Must be a non-negative number';
                maxLimitError.style.display = 'block';
            } else if (!isNaN(minPurchaseValue) && maxLimitValue < minPurchaseValue) {
                isValid = false;
                maxLimit.classList.add('input-error');
                maxLimitError.textContent = 'Must be greater than or equal to minimum purchase';
                maxLimitError.style.display = 'block';
            }

            if (isValid) {
                this.submit();
            }
        });
    }
});
    </script>
</body>
</html>